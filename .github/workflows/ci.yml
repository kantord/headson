name: CI

on:
  push:
    branches: ["**"]
  pull_request:

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo-audit
        uses: rustsec/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --deny warnings

  build-test:
    name: Build and test (deny warnings)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Build all targets
        env:
          RUSTFLAGS: >-
            -D warnings
            -D dead_code
            -D unused_imports
            -D unused_mut
            -D unused_variables
            -D unused_assignments
            -D unused_parens
        run: cargo build --all-targets --all-features

      - name: Run tests
        run: cargo test --all-targets --all-features

  clippy:
    name: Pre-commit (Clippy + fmt)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) with clippy
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Run pre-commit on all files
        env:
          RUSTFLAGS: -D warnings
        run: pre-commit run --all-files

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) with rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Verify rustfmt (79 cols)
        run: cargo fmt --all -- --check

  release:
    name: Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [audit, build-test, clippy, fmt]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust (for cargo-edit)
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-edit
        run: cargo install cargo-edit --locked

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: >-
          npx -y \
          -p semantic-release \
          -p @semantic-release/commit-analyzer \
          -p @semantic-release/release-notes-generator \
          -p @semantic-release/exec \
          -p @semantic-release/git \
          -p @semantic-release/github \
          semantic-release
